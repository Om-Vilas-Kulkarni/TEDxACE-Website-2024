{"version":3,"file":"static/js/604.64f419c4.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    // Support deprecated exitBeforeEnter prop\n    if (exitBeforeEnter) {\n        mode = \"wait\";\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"Replace exitBeforeEnter with mode='wait'\");\n        }\n    }\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { warning } from '../../utils/errors.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animateValue({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.1.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.1.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.1.7\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","isComplete","values","register","delete","undefined","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","forceRender","forcedRenderCount","setForcedRenderCount","useState","useCallback","sync","postRender","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","callback","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","length","i","indexOf","add","get","insertionIndex","splice","onExit","removeIndex","findIndex","presentChild","has","cloneElement","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","arguments","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","createVisualElement","parent","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","updateFeatures","HandoffAppearAnimations","animationState","animateChanges","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","isBrowser","initialLayoutGroupConfig","isStrict","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","int","number","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","degrees","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","alpha","originX","progressPercentage","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","hasEnteredView","isInView","viewportFallback","onViewportEnter","startObserver","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","pipe","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","isZeroValueString","maxDefaults","applyDefaultFilter","slice","split","match","floatRegex","unit","defaultValue","functionRegex","filter","complex","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","percent","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","velocity","setMotionValue","hasValue","getValue","addValue","motionValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isEasingArray","ease","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","defaultOffset","createInterpolator","interpolate","interpolator","flipTarget","reverse","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","warning","dampingRatio","clamp","undampedFreq","exponentialDecay","a","b","calcAngularFreq","c","exp","d","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","velocityPerSecond","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","framesync","passTimestamp","stop","animateValue","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isForwardPlayback","animator","delay","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","owner","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","read","createInstantAnimation","setValue","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","parseFloat","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startAnimation","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","Promise","resolve","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","then","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","hasAnimated","appearId","shouldReduceMotion","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","progress","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","template","createTransformer","xScale","yScale","averageScale","output","cssVariable","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","isAnimating","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","arr","item","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","analyseComplexValue","targetStats","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","progressInRange","any","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","subscriptions","numSubscriptions","getSize","init","useLayoutEffect","frameDuration","MotionValue","_this","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","destroy","isColorString","r","substring","parseInt","splitColor","alpha$1","sanitize","isString","rgbUnit","clampRgbUnit","testProp","singleColorRegex","aName","bName","cName","colorToken","numberToken","colors","colorRegex","numbers","tokenised","convertNumbersToZero","transformer","createUnitType","endsWith"],"sourceRoot":""}